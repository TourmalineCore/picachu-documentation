@startuml C4_Elements
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
HIDE_STEREOTYPE()

AddElementTag("queue", $bgColor="Teal",$borderColor="black")
AddElementTag("exchange", $bgColor="SeaGreen",$shape=RoundedBoxShape())
AddElementTag("neural_network", $bgColor="DarkSlateGray")
AddElementTag("database", $bgColor="MediumSlateBlue",$borderColor="black")
AddElementTag("storage", $bgColor="LightSlateGray",$borderColor="black")
AddRelTag("event", $textColor="MediumVioletRed", $lineColor="MediumVioletRed")

Container(UI, "UI", "", "")
Container(API, "API", "", "")
Container(ServerSentEvent, "ServerSentEvent", "", "")

ContainerQueue(ColorServiceQueue, "Color\nService\nQueue", "the system starts\n three queues\nfor each model\n1.ColorQueue\n2.EmotionQueue\n3.ObjectQueue}", "",$tags = "queue")
ContainerQueue(AssociationsServiceQueue, "Associations\nService\nQueue", "", "",$tags = "queue")

ContainerDb(S3, "S3", "", "",$tags="storage")
ContainerDb(DB_api, "DB_api", "", "",$tags="database")
ContainerDb(Associations_DB, "Associations_DB", "", "",$tags="database")
ContainerDb(Colors_DB, "Colors_DB", "", "",$tags="database")

ContainerQueue(DelayedRetryQueue, "Delayed\nRetry\nQueue", "", "",  $tags = "queue")
Container(ColorService, "Color\nService", "the system starts\n three models\n1.ColorModel\n2.EmotionModel\n3.ObjectModel}", "",$tags="neural_network")

Container(AssociationsManager, "Associations\nManager", "", "")


Container(RequestExchange, "Request\nExchange", "", "", $tags ="exchange")
Container(ColorDeterminedExchange, "ColorDeterminedExchange", "the system starts four \nexchange for each model\n1.ColorDeterminedExchange\n2.EmotionDeterminedExchange\n3.ObjectDeterminedExchange\n4.AssociationDeterminedExchange", "", $tags ="exchange")
Container(UniquenessDeterminedExchange, "UniquenessDeterminedExchange", "the system starts four \nexchange for each type uniquenessn\n1.ColorUniqueness\n2.TagsUniqueness\n3.OverallUniqueness", "", $tags ="exchange")

Container(UniquenessSavedExchange, "UniquenessSavedExchange", "the system starts four \nexchange for each model\n1.ColorUniqueness\n2.TagsUniqueness\n3.OverallUniqueness", "", $tags ="exchange")
ContainerQueue(UniquenessSavedQueue, "Uniqueness\nSavedQueue", "the system starts four\n queues for type uniqueness\n1.ColorUniqueness\n2.TagsUniqueness\n3.OverallUniqueness", "",$tags = "queue")


Container(ModelsQueuesDLX, "Models\nQueuesDLX", "", "",$tags ="exchange")
Container(DelayedRetryQueueDLX, "Delayed\nRetry\nQueueDLX", "", "",$tags ="exchange")

ContainerQueue(ColorsDeterminedForAPIQueue, "ColorsDeterminedForAPIQueue", "the system starts four\n queues for each model\n1.ColorQueue\n2.EmotionQueue\n3.ObjectQueue\n4.AssociationQueue", "",$tags = "queue")
ContainerQueue(ColorsDeterminedForUniquenessQueue, "ColorsDetermined\nForUniquenessQueue", "the system starts two\n queues for each model\n1.ColorQueue\n2.AssociationQueue", "",$tags = "queue")

Container(TagsDeterminedForAssociationsExchange, "TagsDetermined\nForAssociations\nExchange", "", "", $tags ="exchange")

ContainerQueue(ObjectDeterminedForAssociationsQueue, "ObjectDetermined\nFornAssociationsQueue", "", "",$tags = "queue")
Container(AssociationsService, "Associations\nService", "", "",$tags="neural_network")

Container(UniquenessService, "Uniqueness\nService", "the service calculates\nthree types of uniqueness \n1.ColorUniqueness\n2.TagsUniqueness\n3.OverallUniqueness", "")
ContainerQueue(UniquenessDeterminedQueue, "UniquenessDeterminedQueue", "the system starts four\n queues for type uniqueness\n1.ColorUniqueness\n2.TagsUniqueness\n3.OverallUniqueness", "",$tags = "queue")

Rel_L(UI, API, "PhotoReceived", "",$tags ="event")
Rel_D(API, S3, "POST", "save photo")
Rel_U(API, DB_api, " ", " ")
Rel_D(API, RequestExchange, "PhotoSaved", "",$tags ="event")

Rel_D(RequestExchange, ColorServiceQueue, " ", "")
Rel_R(ColorService, ColorServiceQueue, "listen", "")
Rel_U(ColorService, S3, "GET", "photo")

Rel_R(DelayedRetryQueueDLX, ColorService, " ", "")
Rel_L(DelayedRetryQueueDLX, AssociationsService, " ", "")

Rel_U(ColorService, Colors_DB, " ", "")
Rel_U(AssociationsService,Associations_DB,  " ", "")

Rel_D(API, ColorService,  "GET", "")
Rel_D(API, AssociationsService,  "GET", "")

Lay_R(ColorService,DelayedRetryQueueDLX)


Rel_D(ColorService, ModelsQueuesDLX, "on reject", "")
Rel_D(AssociationsService, ModelsQueuesDLX, "on reject", "")


Rel_U(ModelsQueuesDLX, DelayedRetryQueue, " ", "")

Lay_U(DelayedRetryQueue,DelayedRetryQueueDLX)
Lay_U(DelayedRetryQueue,ColorService)
Rel_U(DelayedRetryQueue, DelayedRetryQueueDLX, " ", "")


Rel(ColorService, ColorDeterminedExchange, "ColorsDetermined", "",$tags ="event")
Rel_D(AssociationsService, ColorDeterminedExchange, "AssociationsDetermined", "",$tags ="event")

Lay_D(AssociationsService,ColorDeterminedExchange)
Lay_D(DelayedRetryQueueDLX,ColorDeterminedExchange)
Lay_D(DelayedRetryQueue,ColorDeterminedExchange)
Lay_D(ModelsQueuesDLX,ColorDeterminedExchange)
Lay_D(DelayedRetryQueue,ModelsQueuesDLX)


Rel_R(ColorDeterminedExchange, ColorsDeterminedForAPIQueue, " ", "",$tags ="event")
Rel_R(ColorDeterminedExchange, ObjectDeterminedForAssociationsQueue, " ", "",$tags ="event")
Rel_R(ColorDeterminedExchange, ColorsDeterminedForUniquenessQueue, " ", "",$tags ="event")



Lay_R(ColorDeterminedExchange,ObjectDeterminedForAssociationsQueue)


Lay_L(ColorsDeterminedForUniquenessQueue,ObjectDeterminedForAssociationsQueue)

Lay_L(ColorDeterminedExchange,ObjectDeterminedForAssociationsQueue)


Lay_D(AssociationsManager,ObjectDeterminedForAssociationsQueue)
Lay_U(AssociationsManager,TagsDeterminedForAssociationsExchange)

Rel_R(AssociationsManager, ObjectDeterminedForAssociationsQueue, "listen", "")

Rel_U(AssociationsService, AssociationsServiceQueue, "listen", "")

Rel_U(AssociationsManager, TagsDeterminedForAssociationsExchange, "Tags\nDetermined", "",$tags ="event")

Rel_U(TagsDeterminedForAssociationsExchange,AssociationsServiceQueue, " ", "",$tags ="event")


Rel_L(UniquenessService, ColorsDeterminedForUniquenessQueue, "listen", "")

Rel_R(UniquenessService, UniquenessDeterminedExchange, "ColorUniqueness\nDetermined", "",$tags ="event")

Lay_L(ColorsDeterminedForUniquenessQueue,DelayedRetryQueue)
Rel_R(UniquenessDeterminedExchange, UniquenessDeterminedQueue, " ", "",,$tags ="event")

Rel_R(API, UniquenessDeterminedQueue, " ", "")

Rel_R(ServerSentEvent, ColorsDeterminedForAPIQueue, "listen", "")

Lay_D(ColorsDeterminedForAPIQueue,ColorsDeterminedForUniquenessQueue)

Lay_R(ServerSentEvent,UI)

Lay_R(RequestExchange,UI)
Rel_U(ServerSentEvent, UI, " ", "")

Rel_R(ServerSentEvent, UniquenessSavedQueue, "listen", "")
Rel_D(UniquenessSavedExchange, UniquenessSavedQueue, " ", "",$tags ="event")
Rel_R(API,UniquenessSavedExchange, " ", "",$tags ="event")

SHOW_LEGEND(false)
@enduml






